AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'anoop.kunjuraman.com website

  '
Resources:
  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: anoop.kunjuraman.com website
  CloudfrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: anoop.kunjuraman.com website
        DefaultRootObject: index.html
        Aliases:
        - anoop.kunjuraman.com
        ViewerCertificate:
          AcmCertificateArn: arn:aws:acm:us-east-1:414954339574:certificate/355fc4e1-57ca-46d8-babc-86fe1d771b47
          SslSupportMethod: sni-only
        Enabled: true
        HttpVersion: http2
        Origins:
        - Id: s3-website
          DomainName:
            Fn::GetAtt:
            - S3Bucket
            - DomainName
          S3OriginConfig:
            OriginAccessIdentity:
              Fn::Sub: origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}
        DefaultCacheBehavior:
          Compress: 'true'
          AllowedMethods:
          - GET
          - HEAD
          - OPTIONS
          ForwardedValues:
            QueryString: false
          TargetOriginId: s3-website
          ViewerProtocolPolicy: redirect-to-https
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: anoop.kunjuraman.com
  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: S3Bucket
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action: s3:GetObject
          Resource:
          - Fn::Sub: arn:aws:s3:::${S3Bucket}/*
          Principal:
            AWS:
              Fn::Sub: arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity
                ${CloudFrontOriginAccessIdentity}
